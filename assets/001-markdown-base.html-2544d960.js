import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{g as t,o as r,c,a as e,b as d,f as a,h as i}from"./app-3f27a5c5.js";const l={},h=i(`<h2 id="markdown标题语法" tabindex="-1"><a class="header-anchor" href="#markdown标题语法" aria-hidden="true">#</a> Markdown标题语法</h2><p>创建标题时可在标题文本前加上<code>#</code>，<code>#</code>的数量代表标题的级别。并且由于不同的Markdown应用程序处理<code>#</code>和标题之间的空格方式并不一致，需在<code>#</code>和标题文本间使用空格</p><p>例如： <code># 一级标题</code></p><h2 id="markdown段落语法" tabindex="-1"><a class="header-anchor" href="#markdown段落语法" aria-hidden="true">#</a> Markdown段落语法</h2><p>使用空白行将一行或多行文本进行分割，并且不要使用空格或制表位缩进段落</p><h2 id="markdown换行语法" tabindex="-1"><a class="header-anchor" href="#markdown换行语法" aria-hidden="true">#</a> Markdown换行语法</h2><p>在一行的末尾添加两个或多个空格，然后按回车键换行</p><h2 id="markdown强调语法" tabindex="-1"><a class="header-anchor" href="#markdown强调语法" aria-hidden="true">#</a> Markdown强调语法</h2><p>通过将文本设置为粗体或斜体来强调其重要性</p><p>可以通过在需要加粗部分的前后添加两个<code>*</code>或<code>_</code><br> 例如：输入<code>**加粗**</code>，可以得到<strong>加粗</strong></p><p>可以通过在需要使用斜体部分的前后添加一个<code>*</code>或<code>_</code><br> 例如：输入<code>*斜体*</code>，可以得到<em>斜体</em></p><p>如果需要同时使用粗体和斜体，则需要在需要使用加粗和斜体部分的前后添加三个<code>*</code>或<code>_</code>。<br> 例如：输入<code>***加粗斜体***</code>，可以得到<em><strong>加粗斜体</strong></em></p><h2 id="markdown引用语法" tabindex="-1"><a class="header-anchor" href="#markdown引用语法" aria-hidden="true">#</a> Markdown引用语法</h2><p>要创建快引用，需要在段落前添加<code>&gt;</code>符号<br> 例如：输入<code>&gt;这是一个引用</code></p><blockquote><p>这是一个引用</p></blockquote><p>块引用可以包含多个段落，需要为段落之间的空白行添加<code>&gt;</code><br> 例如：输入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;这是一个引用
&gt;
&gt;这是一个引用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这是一个引用</p><p>这是一个引用</p></blockquote><p>嵌套块的引用则是将嵌套块的引用符号增加一个<code>&gt;</code>变为<code>&gt;&gt;</code><br> 例如：输入</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;这是一个引用
&gt;
&gt;&gt;这是一个引用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>这是一个引用</p><blockquote><p>这是一个引用</p></blockquote></blockquote><p>并且引用中也可以包含其他Markdown语法</p><h2 id="markdown列表语法" tabindex="-1"><a class="header-anchor" href="#markdown列表语法" aria-hidden="true">#</a> Markdown列表语法</h2><p>可以创建有序列表或无序列表</p><p>有序列表需从数字1起始，使用<code>1. 文本</code>的格式，数字不需要按顺序排列</p><ol><li>文本</li></ol><p>无序列表则是在文本前加上<code>-</code>、<code>+</code>、<code>*</code>，如<code>- 文本</code></p><ul><li>文本</li></ul><h2 id="markdown代码语法" tabindex="-1"><a class="header-anchor" href="#markdown代码语法" aria-hidden="true">#</a> Markdown代码语法</h2><p>要将文本表示为代码，需要将文本使用<code>\`</code>包括</p><h2 id="markdown表格语法" tabindex="-1"><a class="header-anchor" href="#markdown表格语法" aria-hidden="true">#</a> Markdown表格语法</h2><p>要在Markdown中编写表格，可以使用竖线（|）分隔每列，并使用连字符（-）分隔标题行和内容行。可以根据需要调整列和行的数量，并在每个单元格中填入相应的内容，如：</p><table><thead><tr><th>列1标题</th><th>列2标题</th><th>列3标题</th></tr></thead><tbody><tr><td>单元格1</td><td>单元格2</td><td>单元格3</td></tr><tr><td>单元格4</td><td>单元格5</td><td>单元格6</td></tr></tbody></table><p>对其方式</p><ul><li><code>-:</code> 设置内容和标题栏居右对齐</li><li><code>:-</code> 设置内容和标题栏居左对齐</li><li><code>:-:</code> 设置内容和标题栏居中对齐</li></ul><h2 id="markdown分隔线语法" tabindex="-1"><a class="header-anchor" href="#markdown分隔线语法" aria-hidden="true">#</a> Markdown分隔线语法</h2><p>要创建分隔线，需要在单独一行上使用三个或多个<code>***</code>、<code>---</code>、<code>___</code></p><p>下面为分隔线</p><hr><h2 id="markdown链接语法" tabindex="-1"><a class="header-anchor" href="#markdown链接语法" aria-hidden="true">#</a> Markdown链接语法</h2>`,40),s=e("code",null,'[显示名](链接地址 "链接标题")',-1),p={href:"https://yzjnnff.github.io/blog/",title:"很酷的博客",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,[d("使用尖括号"),e("code",null,"< >"),d("可将URL或email地址变为可点击的链接"),e("code",null,"<https://yzjnnff.github.io/blog/>")],-1),k={href:"https://yzjnnff.github.io/blog/",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"markdown图片语法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#markdown图片语法","aria-hidden":"true"},"#"),d(" Markdown图片语法")],-1),b=e("p",null,[d("要添加图片，可使用"),e("code",null,'![图片名](图片地址 "图片标题")')],-1),g=e("figure",null,[e("img",{src:"https://wallpapers.com/images/high/demon-slayer-akaza-annihilation-type-technique-85jwx2r4t5howzk3.webp",alt:"这是图片",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Akaza")],-1),_=e("p",null,[d("链接图片，可使用"),e("code",null,'[![图片名](图片地址 "图片标题")](链接地址)')],-1),w={href:"https://yzjnnff.github.io/blog/",target:"_blank",rel:"noopener noreferrer"},f=e("img",{src:"https://wallpapers.com/images/high/demon-slayer-akaza-annihilation-type-technique-85jwx2r4t5howzk3.webp",alt:"这是图片",tabindex:"0",loading:"lazy"},null,-1),x=e("figcaption",null,"Akaza",-1),v=e("h2",{id:"markdown转义字符语法",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#markdown转义字符语法","aria-hidden":"true"},"#"),d(" Markdown转义字符语法")],-1),M=e("p",null,[d("要显示原本用于格式化Markdown文档的字符，可在字符前添加"),e("code",null,"\\")],-1);function y(z,q){const o=t("ExternalLinkIcon");return r(),c("div",null,[h,e("p",null,[d("链接文本放在中括号中，链接地址放在后面的括号中，链接标题可选"),s,d("，例如"),e("a",p,[d("YanZJNNFF's Blog"),a(o)])]),u,e("p",null,[e("a",k,[d("https://yzjnnff.github.io/blog/"),a(o)])]),m,b,g,_,e("figure",null,[e("a",w,[f,a(o)]),x]),v,M])}const B=n(l,[["render",y],["__file","001-markdown-base.html.vue"]]);export{B as default};
